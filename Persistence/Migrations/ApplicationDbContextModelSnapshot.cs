// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

#nullable disable

namespace Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.AddressCount", b =>
                {
                    b.Property<int?>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("AddressCount");
                });

            modelBuilder.Entity("Domain.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("GovernorateId");

                    b.ToTable("Citiy");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GovernorateId = 6,
                            Name = "Shubra"
                        },
                        new
                        {
                            Id = 2,
                            GovernorateId = 6,
                            Name = "Obour"
                        });
                });

            modelBuilder.Entity("Domain.Governorate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Governorate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Alexandria"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Assiut"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Aswan"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Beheira"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bani Suef"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Cairo"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Daqahliya"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Damietta"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Fayyoum"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Gharbiya"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Giza"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Helwan"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Ismailia"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Kafr El Sheikh"
                        },
                        new
                        {
                            Id = 15,
                            Name = "Luxor"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Marsa Matrouh"
                        },
                        new
                        {
                            Id = 17,
                            Name = "Minya"
                        },
                        new
                        {
                            Id = 18,
                            Name = "Monofiya"
                        },
                        new
                        {
                            Id = 19,
                            Name = "New Valley"
                        },
                        new
                        {
                            Id = 20,
                            Name = "North Sinai"
                        },
                        new
                        {
                            Id = 21,
                            Name = "Port Said"
                        },
                        new
                        {
                            Id = 22,
                            Name = "Qalioubiya"
                        },
                        new
                        {
                            Id = 23,
                            Name = "Qena"
                        },
                        new
                        {
                            Id = 24,
                            Name = "Red Sea"
                        },
                        new
                        {
                            Id = 25,
                            Name = "Sharqiya"
                        },
                        new
                        {
                            Id = 26,
                            Name = "Sohag"
                        },
                        new
                        {
                            Id = 27,
                            Name = "South Sinai"
                        },
                        new
                        {
                            Id = 28,
                            Name = "Suez"
                        },
                        new
                        {
                            Id = 29,
                            Name = "Tanta"
                        });
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("BuildingNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CityId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("FlatNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("GovernorateId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("MiddleName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.HasIndex("GovernorateId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Domain.AddressCount", b =>
                {
                    b.HasOne("Domain.Governorate", "Governorate")
                        .WithOne("AddressCount")
                        .HasForeignKey("Domain.AddressCount", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Domain.City", b =>
                {
                    b.HasOne("Domain.Governorate", "Governorate")
                        .WithMany("Cities")
                        .HasForeignKey("GovernorateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Domain.User", b =>
                {
                    b.HasOne("Domain.City", "City")
                        .WithMany("Users")
                        .HasForeignKey("CityId");

                    b.HasOne("Domain.Governorate", "Governorate")
                        .WithMany("Users")
                        .HasForeignKey("GovernorateId");

                    b.Navigation("City");

                    b.Navigation("Governorate");
                });

            modelBuilder.Entity("Domain.City", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Domain.Governorate", b =>
                {
                    b.Navigation("AddressCount");

                    b.Navigation("Cities");

                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
